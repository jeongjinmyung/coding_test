WITH
CODES AS (
    SELECT
        MAX(CASE WHEN NAME = 'Python' THEN CODE END) AS PYTHON,
        MAX(CASE WHEN NAME = 'C#' THEN CODE END) AS CSHARP
    FROM SKILLCODES
),
FRONTEND_CODE_SUM AS (
    SELECT SUM(CODE) AS FRONTEND_TOTAL
    FROM SKILLCODES
    WHERE CATEGORY = 'FRONT END'
)

SELECT
    CASE
        WHEN D.SKILL_CODE & F.FRONTEND_TOTAL > 0 AND D.SKILL_CODE & C.PYTHON > 0 THEN 'A'
        WHEN D.SKILL_CODE & C.CSHARP > 0 THEN 'B'
        WHEN D.SKILL_CODE & F.FRONTEND_TOTAL > 0 THEN 'C'
        ELSE NULL
    END AS GRADE,
    D.ID,
    D.EMAIL
FROM DEVELOPERS D
JOIN CODES C
JOIN FRONTEND_CODE_SUM F
HAVING GRADE IS NOT NULL
ORDER BY GRADE ASC, ID ASC;
